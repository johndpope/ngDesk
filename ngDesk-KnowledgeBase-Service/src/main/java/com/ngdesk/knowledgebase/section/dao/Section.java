package com.ngdesk.knowledgebase.section.dao;

import java.util.Date;
import java.util.List;

import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.springframework.data.annotation.Id;

import com.ngdesk.commons.annotations.CustomNotEmpty;

import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.Schema.AccessMode;

public class Section {

	@Schema(required = false, accessMode = AccessMode.READ_ONLY, description = "Autogenerated sectionId")
	@Id
	private String sectionId;

	@Schema(description = "Language", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = "SECTION_LANGUAGE")
	@Size(min = 2, max = 2, message = "LANGUAGE_MUST_BE_2_CHAR")
	private String language;

	@Schema(description = "Section Name", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = "SECTION_NAME")
	@Pattern(regexp = "^[a-zA-Z0-9_ ]*$", message = "INVALID_SECTION_NAME")
	private String name;

	@Schema(description = "Description", required = false)
	private String description;

	@Schema(description = "SortBy", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = "SECTION_SORTBY")
	private String sortBy;

	@Schema(description = "Category", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = "SECTION_CATEGORY")
	private String category;

	@Schema(description = "Date Created", required = false, accessMode = AccessMode.READ_ONLY)
	private Date dateCreated;

	@Schema(description = "Date Updated", required = false, accessMode = AccessMode.READ_ONLY)
	private Date dateUpdated;

	@Schema(description = "Last Updated By", required = false, accessMode = AccessMode.READ_ONLY)
	private String lastUpdatedBy;

	@Schema(description = "Created By", required = false, accessMode = AccessMode.READ_ONLY)
	private String createdBy;

	@Schema(description = "Order", required = false)
	private int order;

	@Schema(description = "Is Section Draft", required = false)
	private boolean isDraft;

	@Schema(description = "VisibleTo", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = "SECTION_VISIBLETO")
	private List<String> visibleTo;

	@Schema(description = "ManagedBy", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = "SECTION_MANAGEDBY")
	private List<String> managedBy;

	public Section() {

	}

	public Section(String sectionId, @Size(min = 2, max = 2, message = "LANGUAGE_MUST_BE_2_CHAR") String language,
			@Pattern(regexp = "^[a-zA-Z0-9_ ]*$", message = "INVALID_SECTION_NAME") String name, String description,
			String sortBy, String category, Date dateCreated, Date dateUpdated, String lastUpdatedBy, String createdBy,
			int order, boolean isDraft, List<String> visibleTo, List<String> managedBy) {
		super();
		this.sectionId = sectionId;
		this.language = language;
		this.name = name;
		this.description = description;
		this.sortBy = sortBy;
		this.category = category;
		this.dateCreated = dateCreated;
		this.dateUpdated = dateUpdated;
		this.lastUpdatedBy = lastUpdatedBy;
		this.createdBy = createdBy;
		this.order = order;
		this.isDraft = isDraft;
		this.visibleTo = visibleTo;
		this.managedBy = managedBy;
	}

	public String getSectionId() {
		return sectionId;
	}

	public void setSectionId(String sectionId) {
		this.sectionId = sectionId;
	}

	public String getLanguage() {
		return language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getSortBy() {
		return sortBy;
	}

	public void setSortBy(String sortBy) {
		this.sortBy = sortBy;
	}

	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public Date getDateCreated() {
		return dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	public Date getDateUpdated() {
		return dateUpdated;
	}

	public void setDateUpdated(Date dateUpdated) {
		this.dateUpdated = dateUpdated;
	}

	public String getLastUpdatedBy() {
		return lastUpdatedBy;
	}

	public void setLastUpdatedBy(String lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	public int getOrder() {
		return order;
	}

	public void setOrder(int order) {
		this.order = order;
	}

	public boolean isDraft() {
		return isDraft;
	}

	public void setDraft(boolean isDraft) {
		this.isDraft = isDraft;
	}

	public List<String> getVisibleTo() {
		return visibleTo;
	}

	public void setVisibleTo(List<String> visibleTo) {
		this.visibleTo = visibleTo;
	}

	public List<String> getManagedBy() {
		return managedBy;
	}

	public void setManagedBy(List<String> managedBy) {
		this.managedBy = managedBy;
	}

}
