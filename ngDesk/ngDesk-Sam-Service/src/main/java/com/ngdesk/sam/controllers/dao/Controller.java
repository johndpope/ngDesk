package com.ngdesk.sam.controllers.dao;

import java.util.Date;
import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.Pattern;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Field;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.ngdesk.commons.annotations.CustomNotNull;

import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.Schema.AccessMode;

public class Controller {

	@Schema(required = false, accessMode = AccessMode.READ_ONLY, description = "Autogenerated Id")
	@Id
	@JsonProperty("CONTROLLER_ID")
	private String id;

	@Schema(description = "Host name of the controller", required = true)
	@JsonProperty("HOST_NAME")
	@Field("HOST_NAME")
	@CustomNotNull(message = "NOT_NULL", values = { "CONTROLLER_HOST_NAME" })
	private String hostName;

	@Schema(description = "List of the Sub apps", required = true)
	@JsonProperty("SUB_APPS")
	@Field("SUB_APPS")
	@CustomNotNull(message = "NOT_NULL", values = { "SUB_APPS_LIST" })
	@Valid
	private List<SubApp> subAppList;

	@Schema(description = "Status of the controller", required = true)
	@JsonProperty("STATUS")
	@Field("STATUS")
	@Pattern(regexp = "Online|Offline", message = "INVALID_CONTROLLER_STATUS")
	@CustomNotNull(message = "NOT_NULL", values = { "CONTROLLER_STATUS" })
	private String status;

	@Schema(description = "Last seen of the controller", accessMode = AccessMode.READ_ONLY)
	@JsonProperty("LAST_SEEN")
	@Field("LAST_SEEN")
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'")
	private Date lastSeen;

	@Schema(description = "Company Id of the controller")
	@JsonProperty("COMPANY_ID")
	@Field("COMPANY_ID")
	private String companyId;

	@Schema(description = "Version of the controller")
	@JsonProperty("VERSION")
	@Field("VERSION")
	private Integer version;

	public Controller() {
	}

	public Controller(String id, String hostName, @Valid List<SubApp> subAppList,
			@Pattern(regexp = "Online|Offline", message = "INVALID_CONTROLLER_STATUS") String status, Date lastSeen,
			String companyId, Integer version) {
		this.id = id;
		this.hostName = hostName;
		this.subAppList = subAppList;
		this.status = status;
		this.lastSeen = lastSeen;
		this.companyId = companyId;
		this.version = version;
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getHostName() {
		return hostName;
	}

	public void setHostName(String hostName) {
		this.hostName = hostName;
	}

	public List<SubApp> getSubAppList() {
		return subAppList;
	}

	public void setSubAppList(List<SubApp> subAppList) {
		this.subAppList = subAppList;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public Date getLastSeen() {
		return lastSeen;
	}

	public void setLastSeen(Date lastSeen) {
		this.lastSeen = lastSeen;
	}

	public String getCompanyId() {
		return companyId;
	}

	public void setCompanyId(String companyId) {
		this.companyId = companyId;
	}

	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

}