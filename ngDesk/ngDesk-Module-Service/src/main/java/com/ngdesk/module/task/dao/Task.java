package com.ngdesk.module.task.dao;

import java.util.Date;
import java.util.List;

import javax.validation.constraints.NotNull;
import com.ngdesk.commons.annotations.CustomNotEmpty;
import com.ngdesk.commons.annotations.CustomTimeZoneValidation;

import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.Schema.AccessMode;
import nonapi.io.github.classgraph.json.Id;

public class Task {

	@Schema(required = false, accessMode = AccessMode.READ_ONLY, description = "Autogenerated Id")
	@Id
	private String id;

	@Schema(description = "Conditions")
	private List<Condition> conditions;

	@Schema(description = "Company Id")
	private String companyId;

	@Schema(description = "Module Id", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = { "MODULE_ID" })
	private String moduleId;

	@Schema(description = "Recurrence")
	private boolean recurrence;

	@Schema(description = "Intervals")

	private Interval intervals;

	@Schema(description = "Stop Date")
	private Date stopDate;

	@Schema(description = "Actions")
	List<Action> actions;

	@Schema(description = "Task Name", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = { "TASK_NAME" })
	private String taskName;

	@Schema(description = "Task Description", required = true)
	private String taskDescription;

	@Schema(description = "Date Created", required = false, accessMode = AccessMode.READ_ONLY)
	private Date dateCreated;

	@Schema(description = "Date Updated", required = false, accessMode = AccessMode.READ_ONLY)
	private Date dateUpdated;

	@Schema(description = "Created By", required = false, accessMode = AccessMode.READ_ONLY)
	private String createdBy;

	@Schema(description = "Last Updated By", required = false, accessMode = AccessMode.READ_ONLY)
	private String lastUpdatedBy;

	@Schema(description = "Last Executed", required = false, accessMode = AccessMode.READ_ONLY)
	private Date lastExecuted;

	@Schema(description = "Start Date", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = { "START_DATE" })
	private Date startDate;

	@Schema(description = "Time Zone", required = true)
	@CustomNotEmpty(message = "DAO_VARIABLE_REQUIRED", values = { "TIMEZONE_NOT_NULL" })
	@CustomTimeZoneValidation(message = "INVALID_TIMEZONE", values = { "TIMEZONE" })
	private String timezone;

	public Task() {
		super();
	}

	public Task(String id, List<Condition> conditions, String moduleId, boolean recurrence, Interval intervals,
			Date stopDate, List<Action> actions, String taskName, String taskDescription,
			@NotNull(message = "TIMEZONE_NOT_NULL") String timezone, Date startDate) {
		super();
		this.id = id;
		this.conditions = conditions;
		this.moduleId = moduleId;
		this.setRecurrence(recurrence);
		this.intervals = intervals;
		this.stopDate = stopDate;
		this.actions = actions;
		this.taskName = taskName;
		this.taskDescription = taskDescription;
		this.timezone = timezone;
		this.startDate = startDate;
	}

	public String getTaskId() {
		return id;
	}

	public void setTaskId(String taskId) {
		this.id = taskId;
	}

	public List<Condition> getConditions() {
		return conditions;
	}

	public void setConditions(List<Condition> conditions) {
		this.conditions = conditions;
	}

	public String getModuleId() {
		return moduleId;
	}

	public void setModuleId(String moduleId) {
		this.moduleId = moduleId;
	}

	public List<Action> getAction() {
		return actions;
	}

	public void setAction(List<Action> actions) {
		this.actions = actions;
	}

	public String getTaskName() {
		return taskName;
	}

	public void setTaskName(String taskName) {
		this.taskName = taskName;
	}

	public String getTaskDescription() {
		return taskDescription;
	}

	public void setTaskDescription(String taskDescription) {
		this.taskDescription = taskDescription;
	}

	public Date getDateCreated() {
		return dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	public Date getDateUpdated() {
		return dateUpdated;
	}

	public void setDateUpdated(Date dateUpdated) {
		this.dateUpdated = dateUpdated;
	}

	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	public String getLastUpdatedBy() {
		return lastUpdatedBy;
	}

	public void setLastUpdatedBy(String lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	public boolean isRecurrence() {
		return recurrence;
	}

	public void setRecurrence(boolean recurrence) {
		this.recurrence = recurrence;
	}

	public String getCompanyId() {
		return companyId;
	}

	public void setCompanyId(String companyId) {
		this.companyId = companyId;
	}

	public Interval getIntervals() {
		return intervals;
	}

	public void setIntervals(Interval intervals) {
		this.intervals = intervals;
	}

	public Date getStopDate() {
		return stopDate;
	}

	public void setStopDate(Date stopDate) {
		this.stopDate = stopDate;
	}

	public Date getLastExecuted() {
		return lastExecuted;
	}

	public void setLastExecuted(Date lastExecuted) {
		this.lastExecuted = lastExecuted;
	}

	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public String getTimezone() {
		return timezone;
	}

	public void setTimezone(String timezone) {
		this.timezone = timezone;
	}
}
