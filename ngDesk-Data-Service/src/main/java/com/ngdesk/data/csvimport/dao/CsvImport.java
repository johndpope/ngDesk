package com.ngdesk.data.csvimport.dao;

import java.util.Date;
import java.util.List;

import javax.validation.Valid;

import org.springframework.data.annotation.Id;

import com.ngdesk.commons.annotations.CustomNotNull;

import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.Schema.AccessMode;

public class CsvImport {

	@Schema(required = false, accessMode = AccessMode.READ_ONLY, description = "Autogenerated Id")
	@Id
	private String csvImportId;

	@Schema(required = true, description = "Status of the csv file", example = "Failed")
	private String status;

	@Schema(required = true, description = "Import csv data", example = "csv-import-data")
	@CustomNotNull(message = "NOT_NULL", values = { "CSV_IMPORT_DATA" })
	@Valid
	private CsvImportData csvImportData;

	@Schema(required = false, accessMode = AccessMode.READ_ONLY, description = "Selected Module Id")
	private String moduleId;

	@Schema(required = true, description = "Logs of csv file")
	private List<CsvImportLog> logs;

	@Schema(required = false, accessMode = AccessMode.READ_ONLY, description = "Autogenerated Id")
	private String companyId;

	@Schema(required = true, description = "CSV import name")
	private String name;

	@Schema(required = true, description = "Format of csv file", example = "csv-format")
	@CustomNotNull(message = "NOT_NULL", values = { "CSV_FORMAT" })
	private CsvFormat csvFormat;

	@Schema(required = true, description = "Count of complete csv")
	private int completedCount;

	@Schema(required = true, description = "Count of failed csv")
	private int failedCount;

	@Schema(required = false, description = "Date of csv creation")
	private Date dateCreated;

	@Schema(required = false, description = "Csv creator info")
	private String createdBy;

	public CsvImport() {

	}

	public CsvImport(String csvImportId, String status, CsvImportData csvImportData, String moduleId,
			List<CsvImportLog> logs, String companyId, String name, CsvFormat csvFormat, int completedCount,
			int failedCount, Date dateCreated, String createdBy) {
		super();
		this.csvImportId = csvImportId;
		this.status = status;
		this.csvImportData = csvImportData;
		this.moduleId = moduleId;
		this.logs = logs;
		this.companyId = companyId;
		this.name = name;
		this.csvFormat = csvFormat;
		this.completedCount = completedCount;
		this.failedCount = failedCount;
		this.dateCreated = dateCreated;
		this.createdBy = createdBy;
	}

	public String getCsvImportId() {
		return csvImportId;
	}

	public void setCsvImportId(String csvImportId) {
		this.csvImportId = csvImportId;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public CsvImportData getCsvImportData() {
		return csvImportData;
	}

	public void setCsvImportData(CsvImportData csvImportData) {
		this.csvImportData = csvImportData;
	}

	public String getModuleId() {
		return moduleId;
	}

	public void setModuleId(String moduleId) {
		this.moduleId = moduleId;
	}

	public List<CsvImportLog> getLogs() {
		return logs;
	}

	public void setLogs(List<CsvImportLog> logs) {
		this.logs = logs;
	}

	public String getCompanyId() {
		return companyId;
	}

	public void setCompanyId(String companyId) {
		this.companyId = companyId;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public CsvFormat getCsvFormat() {
		return csvFormat;
	}

	public void setCsvFormat(CsvFormat csvFormat) {
		this.csvFormat = csvFormat;
	}

	public int getCompletedCount() {
		return completedCount;
	}

	public void setCompletedCount(int completedCount) {
		this.completedCount = completedCount;
	}

	public int getFailedCount() {
		return failedCount;
	}

	public void setFailedCount(int failedCount) {
		this.failedCount = failedCount;
	}

	public Date getDateCreated() {
		return dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

}
